{"version":3,"file":"static/js/panelLayout.3f5da63b.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","panels/layout/common.tsx","panels/layout/panel.tsx","panels/layout/index.ts","../node_modules/@material-ui/core/esm/Collapse/Collapse.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { ChangeEvent, memo, useMemo, useState, Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    TextField,\n    Slider,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    makeStyles,\n    createStyles,\n    Collapse,\n    Divider,\n    InputAdornment,\n} from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../redux';\nimport { canvasConfig, CanvasType, RmgStyle } from '../../constants/constants';\nimport {\n    setBranchSpacing,\n    setPaddingPercentage,\n    setSvgHeight,\n    setSvgWidth,\n    setYPercentage,\n} from '../../redux/param/action';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        nestedList: {\n            paddingLeft: theme.spacing(5),\n        },\n        textField: {\n            maxWidth: 168,\n        },\n        slider: {\n            width: 168,\n            marginLeft: 8,\n            marginRight: 8,\n        },\n    })\n);\n\nexport default memo(function LayoutCommon() {\n    const rmgStyle = useAppSelector(store => store.param.style);\n    return (\n        <>\n            <SizeLi />\n            <Divider />\n            {rmgStyle !== RmgStyle.SHMetro && (\n                <>\n                    <YLi />\n                    <Divider />\n                </>\n            )}\n            <BranchSpacingLi />\n            <Divider />\n            <PaddingLi />\n        </>\n    );\n});\n\nconst SizeLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const rmgStyle = useAppSelector(store => store.param.style);\n    const svgHeight = useAppSelector(store => store.param.svg_height);\n    const svgWidths = useAppSelector(store => store.param.svgWidth);\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleSvgWidthChange =\n        (canvas: CanvasType) =>\n        ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n            if (!isNaN(Number(value))) {\n                dispatch(setSvgWidth(Number(value), canvas));\n            }\n        };\n\n    const handleSvgHeightChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n        if (!isNaN(Number(value))) {\n            dispatch(setSvgHeight(Number(value)));\n        }\n    };\n\n    return (\n        <>\n            <ListItem button onClick={() => setIsOpen(prevOpen => !prevOpen)}>\n                <ListItemIcon>\n                    <Icon>panorama_horizontal</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.size.title')} />\n                {isOpen ? <Icon color=\"action\">expand_less</Icon> : <Icon color=\"action\">expand_more</Icon>}\n            </ListItem>\n            <Collapse in={isOpen} unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.nestedList}>\n                    {canvasConfig[rmgStyle].map(canvas => (\n                        <Fragment key={canvas + '.width'}>\n                            <ListItem>\n                                <ListItemText primary={t('layout.size.width.' + canvas)} />\n                                <TextField\n                                    defaultValue={svgWidths[canvas].toString()}\n                                    onChange={handleSvgWidthChange(canvas)}\n                                    className={classes.textField}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n                                    }}\n                                />\n                            </ListItem>\n                            <Divider variant=\"middle\" />\n                        </Fragment>\n                    ))}\n                    <ListItem>\n                        <ListItemText primary={t('layout.size.height')} />\n                        <TextField\n                            value={svgHeight.toString()}\n                            onChange={handleSvgHeightChange}\n                            className={classes.textField}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n                            }}\n                        />\n                    </ListItem>\n                </List>\n            </Collapse>\n        </>\n    );\n};\n\nconst YLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const yPercentage = useAppSelector(store => store.param.y_pc);\n\n    return useMemo(() => {\n        const handleSliderChange = (_: ChangeEvent<{}>, value: number | number[]) => {\n            dispatch(setYPercentage(value as number));\n        };\n\n        return (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>vertical_align_center</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.y')} />\n                <Slider\n                    className={classes.slider}\n                    value={yPercentage}\n                    onChange={handleSliderChange}\n                    step={0.01}\n                    marks={[\n                        { value: 0, label: '0%' },\n                        { value: 100, label: '100%' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        );\n    }, [yPercentage, classes.slider, t, dispatch]);\n};\n\nconst BranchSpacingLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const branchSpacing = useAppSelector(store => store.param.branch_spacing);\n\n    return useMemo(() => {\n        const handleSliderChange = (_: ChangeEvent<{}>, value: number | number[]) => {\n            dispatch(setBranchSpacing(value as number));\n        };\n\n        return (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>format_line_spacing</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.branchSpacing')} />\n                <Slider\n                    className={classes.slider}\n                    value={branchSpacing}\n                    onChange={handleSliderChange}\n                    step={0.01}\n                    marks={[\n                        { value: 0, label: '0px' },\n                        { value: 100, label: '100px' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        );\n    }, [branchSpacing, classes.slider, t, dispatch]);\n};\n\nconst PaddingLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const paddingPercentage = useAppSelector(store => store.param.padding);\n\n    return useMemo(() => {\n        const handleSliderChange = (_: ChangeEvent<{}>, value: number | number[]) => {\n            dispatch(setPaddingPercentage(value as number));\n        };\n\n        return (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>stay_current_landscape</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.padding')} />\n                <Slider\n                    className={classes.slider}\n                    value={paddingPercentage}\n                    onChange={handleSliderChange}\n                    step={0.01}\n                    max={50}\n                    marks={[\n                        { value: 0, label: '0%' },\n                        { value: 50, label: '50%' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        );\n    }, [paddingPercentage, classes.slider, t, dispatch]);\n};\n","import React from 'react';\nimport { Grid, LinearProgress, List, Paper } from '@material-ui/core';\nimport LayoutCommon from './common';\nimport { useAppSelector } from '../../redux';\nimport { RmgStyle } from '../../constants/constants';\n\nconst LayoutGZMTR = React.lazy(() => import(/* webpackChunkName: \"panelLayoutGZMTR\" */ './gzmtr'));\n\nexport default React.memo(function LayoutPanel() {\n    const rmgStyle = useAppSelector(store => store.param.style);\n    return (\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} sm={10} md={7} lg={5}>\n                <Paper>\n                    <List component=\"div\" disablePadding>\n                        <LayoutCommon />\n                        {rmgStyle === RmgStyle.GZMTR && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <LayoutGZMTR />\n                            </React.Suspense>\n                        )}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n});\n\n// export default LayoutPanel;\n","import Panel from './panel';\n\nexport default Panel;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the root element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the root element when the transition has exited and `collapsedSize` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapsedHeight = props.collapsedHeight,\n      _props$collapsedSize = props.collapsedSize,\n      collapsedSizeProp = _props$collapsedSize === void 0 ? '0px' : _props$collapsedSize,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"collapsedSize\", \"component\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === 'number' ? \"\".concat(collapsedHeight || collapsedSizeProp, \"px\") : collapsedHeight || collapsedSizeProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : undefined);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  var handleExiting = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedSize\n      }, style),\n      ref: handleRef\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    if (props.classes && props.classes.container) {\n      throw new Error(['Material-UI: the classes.container key is deprecated.', 'Use `classes.root` instead', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   * @deprecated The prop was renamed to support the addition of horizontal orientation, use `collapsedSize` instead.\n   */\n  collapsedHeight: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'The prop was renamed to support the vertical orientation, use `collapsedSize` instead'),\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the passed `Component`.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);"],"names":["InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","value","_extends","clsx","root","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","useStyles","makeStyles","theme","createStyles","nestedList","paddingLeft","spacing","textField","maxWidth","slider","width","memo","rmgStyle","useAppSelector","store","param","style","SizeLi","Divider","RmgStyle","YLi","BranchSpacingLi","PaddingLi","t","useTranslation","dispatch","useAppDispatch","svgHeight","svg_height","svgWidths","svgWidth","useState","isOpen","setIsOpen","handleSvgWidthChange","canvas","target","isNaN","Number","setSvgWidth","ListItem","button","onClick","prevOpen","ListItemIcon","Icon","ListItemText","primary","Collapse","in","unmountOnExit","List","disablePadding","canvasConfig","map","Fragment","TextField","defaultValue","toString","onChange","InputProps","endAdornment","setSvgHeight","yPercentage","y_pc","useMemo","Slider","_","setYPercentage","step","marks","label","valueLabelDisplay","branchSpacing","branch_spacing","setBranchSpacing","paddingPercentage","padding","setPaddingPercentage","max","LayoutGZMTR","Grid","container","justifyContent","item","xs","sm","md","lg","Paper","fallback","LinearProgress","collapsedHeight","_props$collapsedSize","collapsedSize","collapsedSizeProp","_props$disableStrictM","disableStrictModeCompat","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","timeout","duration","_props$TransitionComp","TransitionComponent","Transition","useTheme","timer","wrapperRef","autoTransitionDuration","concat","clearTimeout","current","enableStrictModeCompat","unstable_strictMode","nodeRef","handleRef","useForkRef","undefined","normalizedTransitionCallback","callback","nodeOrAppearing","maybeAppearing","_ref","_ref2","_slicedToArray","node","isAppearing","handleEnter","handleEntering","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","transitions","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","addEndListener","nodeOrNext","maybeNext","next","setTimeout","state","childProps","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","overflow","transition","create","visibility"],"sourceRoot":""}